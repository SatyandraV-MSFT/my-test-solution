name: development-workflow

on:
  workflow_dispatch:
    inputs:
      remove_deployment:
        type: boolean
        description: "Remove Deployment"
        required: false
        default: true

permissions:
  id-token: write
  contents: read
  statuses: write

env:
  moduleTestSubDir: "tests/e2e/defaults"
  moduleTestFileName: "main.test.bicep"
  elementsRootFolder: "elements/res"

jobs:
  validate:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref_name, 'ci/') == false }}
    environment: sandbox
    steps:
      - name: Checkout the feature branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
      - name: Define inputs
        id: define_inputs
        shell: pwsh
        run: |
          # Split the branch name into module name and version
          $moduleParts = "${{ github.ref_name }}" -split '/'
          # Module name
          $moduleName = "$($moduleParts[0])/$($moduleParts[1])"
          # Set the outputs
          echo "::set-output name=module_name::$moduleName"
      - name: validate Bicep Test E2E Defaults
        id: validate_bicep
        uses: ./.github/actions/templates/validate
        with:
          module_name: "${{ steps.define_inputs.outputs.module_name }}"
          test_subdir: "${{ env.moduleTestSubDir }}"
          file_name: "${{ env.moduleTestFileName }}"
          region: ${{ vars.AZURE_RESOURCE_REGION }}
          namePrefix: ${{ vars.AZURE_RESOURCE_PREFIX }}
          azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  deploy:
    needs:
      - validate
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref_name, 'ci/') == false }}
    environment: sandbox
    steps:
      - name: Checkout the feature branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
      - name: Define inputs
        id: define_inputs
        shell: pwsh
        run: |
          # Split the branch name into module name and version
          $moduleParts = "${{ github.ref_name }}" -split '/'
          # Module name
          $moduleName = "$($moduleParts[0])/$($moduleParts[1])"
          # Set the outputs
          echo "::set-output name=module_name::$moduleName"
      - name: Deploy Bicep Test E2E Defaults
        id: deploy_bicep
        uses: ./.github/actions/templates/deploy
        with:
          module_name: "${{ steps.define_inputs.outputs.module_name }}"
          test_subdir: "${{ env.moduleTestSubDir }}"
          file_name: "${{ env.moduleTestFileName }}"
          region: ${{ vars.AZURE_RESOURCE_REGION }}
          namePrefix: ${{ vars.AZURE_RESOURCE_PREFIX }}
          azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  Removal:
    if: ${{ inputs.remove_deployment == true && startsWith(github.ref_name, 'ci/') == false }}
    needs:
      - deploy
    runs-on: ubuntu-latest
    environment: sandbox 
    steps:
      - name: Checkout the feature branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
      - name: Define inputs
        id: define_inputs
        shell: pwsh
        run: |
          # Split the branch name into module name and version
          $moduleParts = "${{ github.ref_name }}" -split '/'
          # Module name
          $moduleName = "$($moduleParts[0])/$($moduleParts[1])"
          # Set the outputs
          echo "::set-output name=module_name::$moduleName"
      - name: Remove Deployment
        uses: ./.github/actions/templates/remove
        with:
          module_name: ${{ steps.define_inputs.outputs.module_name }}
          azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}